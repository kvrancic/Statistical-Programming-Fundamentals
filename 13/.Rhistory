# budući da stalno koristimo istu "osnovicu" grafa možemo ju
# pohraniti u zasebnu varijablu npr. imena `graf`
graf <- ggplot(mtcars, aes(x = wt, y = mpg))
library(tidyverse)
library(gridExtra)
library(GGally)
knitr::opts_chunk$set(results = 'hold')
x <- 1:50
# proslijedite `x` i `x*x` funkciji `plot`
plot(x, x*x)
# Učitajte podatkovni skup `mtcars` u globalnu okolinu
data(mtcars) #bitno jer ce se pri izmjeni poceti koristiti referenca
# proučite okvir `mtcars`  (head, glimpse, ?...)
glimpse(mtcars)
ggplot() +
layer( data = mtcars,                      # 1. podaci
mapping = aes(x = wt, y = mpg),     # 2. mapiranja / estetike
geom = "point",                     # 3. geometrija
stat = "identity",                  # za sada zanemariti
position = "identity")              # za sada zanemariti
# budući da stalno koristimo istu "osnovicu" grafa možemo ju
# pohraniti u zasebnu varijablu npr. imena `graf`
graf <- ggplot(mtcars, aes(x = wt, y = mpg))
graf + geom_point() + geom_line()
# dodajte varijabli `graf` geometriju točaka a potom linijsku geometriju
# ponovite postupak ali metodu zaglađivanja
# postavite na `loess`
graf + geom_point() + stat_smooth(formaula = y ~ x, method = "lm")
# ponovite postupak ali metodu zaglađivanja
# postavite na `loess`
graf + geom_point() + stat_smooth(formaula = y ~ x, method = "loess")
# stvorite još jednom isti graf ali sloju zaglađivanja
# dodajte estetiku `group` postavljenu na `cyl`
# Što smo ovime postigli?
graf + geom_point() + stat_smooth(formaula = y ~ x, method = "loess", aes(group = cyl))
# stvorite još jednom isti graf ali sloju zaglađivanja
# dodajte estetiku `group` postavljenu na `cyl`
# Što smo ovime postigli?
graf + geom_point() + stat_smooth(formula = y ~ x, method = "loess", aes(group = cyl))
# ponovite postupak ali metodu zaglađivanja
# postavite na `loess`
graf + geom_point() + stat_smooth(formula = y ~ x, method = "loess")
# nacrtajte stupčani graf varijable `cyl` tablice `mtcars`
# isprobajte funkcije `geom_bar` i `stat_count`
# ima li razlike?
mtcars %>% ggplot(x = cyl) + geom_bar()
# nacrtajte stupčani graf varijable `cyl` tablice `mtcars`
# isprobajte funkcije `geom_bar` i `stat_count`
# ima li razlike?
mtcars %>% ggplot(aes(x = cyl) + geom_bar()
# nacrtajte stupčani graf varijable `cyl` tablice `mtcars`
# isprobajte funkcije `geom_bar` i `stat_count`
# ima li razlike?
mtcars %>% ggplot(aes(x = cyl)) + geom_bar()
# nacrtajte stupčani graf varijable `cyl` tablice `mtcars`
# isprobajte funkcije `geom_bar` i `stat_count`
# ima li razlike?
mtcars %>% ggplot(aes(x = cyl)) + geom_bar()
mtcars %>% ggplot(aes(x = cyl)) + stat_count()
# nacrtajte histogram varijable `wt` tablice `mtcars`
# varijablu podijelite jednoliko u četiri ladice
# koristite funkciju `geom_histogram`
mtcars %>% geom_histogram(aes(x = wt))
# nacrtajte histogram varijable `wt` tablice `mtcars`
# varijablu podijelite jednoliko u četiri ladice
# koristite funkciju `geom_histogram`
mtcars %>% ggplot(aes(x = wt)) + geom_histogram(bins = 4)
# nacrtajte histogram varijable `wt` tablice `mtcars`
# težine podijelite jednoliko u četiri ladice
# koristite funkciju `geom_histogram`
# za agregacijsku varijablu postavite `ncount`
mtcars %>% ggplot(aes(x = wt)) + geom_histogram(bins = 4, aes(y = ..ncount..))
# nacrtajte histogram varijable `wt`, uz dodanu varijablu `cyl` na estetici `fill`
mtcars %>% ggplot(aes(x = wt, fill = cyl)) + geom_histogram(bins = 4, aes(y = ..ncount..))
# nacrtajte histogram varijable `wt`, uz dodanu varijablu `cyl` na estetici `fill`
mtcars %>% ggplot(aes(x = wt, fill = cyl)) + geom_histogram(bins = 4)
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
mtcars$vs <- factor(mtcars$vs, labels = c("V", "S"))
mtcars$am <- factor(mtcars$am, labels = c("automatic", "manual"))
mtcars$cyl  <- factor(mtcars$cyl)
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
mtcars$vs <- factor(mtcars$vs, labels = c("V", "S"))
mtcars$am <- factor(mtcars$am, labels = c("automatic", "manual"))
mtcars$cyl  <- factor(mtcars$cyl)
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
# nacrtajte histogram varijable `wt`, uz dodanu varijablu `cyl` na estetici `fill`
mtcars %>% ggplot(aes(x = wt, fill = cyl)) + geom_histogram(bins = 4)
mtcars %>% ggplot(aes(x = wt, fill = cyl)) + geom_histogram(bins = 4, position = "dodge")
# nacrtajte histogram varijable `wt`, uz dodanu varijablu `cyl` na estetici `fill`
mtcars %>% ggplot(aes(x = wt, fill = cyl)) + geom_histogram(bins = 4)
mtcars %>% ggplot(aes(x = wt, fill = cyl)) + geom_histogram(bins = 4, position = "dodge")
mtcars %>% ggplot(aes(x = wt, fill = cyl)) + geom_histogram(bins = 4, position = "identity")
mtcars %>% ggplot(aes(x = wt, fill = cyl)) + geom_histogram(bins = 4, position = "identity", alpha = 0.4)
# nacrtajte histogram varijable `wt`, uz dodanu varijablu `cyl` na estetici `fill`
mtcars %>% ggplot(aes(x = wt, fill = cyl)) + geom_histogram(bins = 4) # position je po defaultu stack (stupci jedan na drugom)
mtcars %>% ggplot(aes(x = wt, fill = cyl)) + geom_histogram(bins = 4, position = "dodge")
mtcars %>% ggplot(aes(x = wt, fill = cyl)) + geom_histogram(bins = 4, position = "identity", alpha = 0.4)
# nacrtajte opet histogram varijable wt, ali pozicijski aspekt `position` postavite na `"dodge"`
mtcars %>% ggplot(aes(x = wt, fill = cyl)) + geom_histogram(bins = 4, position = "dodge")
# nacrtajte histogram varijable `wt`, uz dodanu varijablu `cyl` na estetici `fill`
mtcars %>% ggplot(aes(x = wt, fill = cyl)) + geom_histogram(bins = 4) # position je po defaultu stack (stupci jedan na drugom)
mtcars %>% ggplot(aes(x = wt, fill = cyl)) + geom_histogram(bins = 4, position = "identity", alpha = 0.4)
mtcars %>% ggplot(aes(x = wt, fill = cyl)) + geom_histogram(bins = 4, position = "fill", color = "black")
df <- data.frame( x = c(rep(1, 90), rep(2, 9), 3),
y = c(rep(1, 70), rep(2, 25), rep(3, 5)))
ggplot(df, aes(x = x, y = y)) + geom_point()
ggplot(df, aes(x = x, y = y)) + geom_point() + geom_jitter(width = 0.3, height = 0.3, color = "blue")
ggplot(df, aes(x = x, y = y)) + geom_jitter(width = 0.3, height = 0.3, color = "blue")
ggplot(df, aes(x = x, y = y)) + geom_jitter(width = 0.3, height = 0.3, alpha = 0.4, color = "blue")
ggplot(mtcars, aes(x = hp, y = mpg, col = as.factor(cyl))) + geom_point() +
geom_smooth(aes(x = hp, y = mpg), method = 'loess', linetype = 4, color =
ggplot(mtcars, aes(x = hp, y = mpg, col = as.factor(cyl))) + geom_point() +
geom_smooth(aes(x = hp, y = mpg), method = 'loess', linetype = 4, color = "grey", se = F, inherit.aes = F) +
labs(x = "broj konjskih snaga", y = "potrošnja", col = "broj cilindara")
ggsave(figure1.pdf)
# spremite sljedeći graf u datoteke `figure1.pdf`i `figure1.png`
ggplot(mtcars, aes(x = hp, y = mpg, col = as.factor(cyl))) + geom_point() +
geom_smooth(aes(x = hp, y = mpg), method = 'loess', linetype = 4, color = "grey", se = F, inherit.aes = F) +
labs(x = "broj konjskih snaga", y = "potrošnja", col = "broj cilindara")
ggsave(figure1.pdf)
ggsave("figure1.pdf")
